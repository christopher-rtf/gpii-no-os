/*
 * GPII "OS Stubs" Personalization Framework
 *
 * Copyright 2020 Raising the Floor -- US Inc. All rights reserved.
 * Copyright 2012 Raising the Floor - International
 * Copyright 2012 Antranig Basman
 * Copyright 2012 Astea Solutions AD
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 * 
 * The R&D leading to these results received funding from the
 * Department of Education - Grant H421A150005 (GPII-APCP). However,
 * these results do not necessarily represent the policy of the
 * Department of Education, and you should not assume endorsement by the
 * Federal Government.
 * 
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 */

"use strict";

var gpii = fluid.registerNamespace("gpii");
var osstubs = fluid.registerNamespace("gpii.osstubs");

/**
 * Gets the USB drives that are available.
 *
 * @param {Array<String>} drivePaths [optional] Array of drives (mounting paths) to check. Omit to check all drives on the system.
 * @return {Array<String>} Array of mounting paths to each USB drive.
 */
gpii.osstubs.getUsbDrives = function (drivePaths) {
    var drives = [];

    return drives;
};

/**
 * Ejects USB drives
 *
 * @param {Array<String>} drivePaths - Array of drives (mounting paths) to eject.
 */
gpii.osstubs.ejectUsbDrives = function (drivePaths) {
    return;
}

/**
 * Opens directory paths
 *
 * @param {Array<String>} paths - Array of directory paths to open.
 */
gpii.osstubs.openDirectories = function (paths) {
    return;
}
