/*
 * DPI support for OS Stubs
 *
 * Copyright 2016-2020 Raising the Floor -- US Inc. All rights reserved.
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 * 
 * The R&D leading to these results received funding from the
 * Department of Education - Grant H421A150005 (GPII-APCP). However,
 * these results do not necessarily represent the policy of the
 * Department of Education, and you should not assume endorsement by the
 * Federal Government.
 */

"use strict";

/* The "DpiOffset" scheme here is modeled after Windows 10.
 *
 * Imagine that the screen resolution options for an operating system are a "zoom level", like how Windows has zoom levels:
 *   [ 100, 125, 150, 175, 200, 225, 250, 300, 350, 400, 450, 500 ]
 * 
 * In this scenario, as an example, if the "default" DPI's % is 175%, then a dpiOffset of 0 is 175, 2 is 225, and -1 is 150.
 */

var fluid = require("gpii-universal");

var gpii = fluid.registerNamespace("gpii");
var osstubs = fluid.registerNamespace("gpii.osstubs");

/**
 * Get the configured, maximum, and actual DPI values of the primary display.
 *
 * The value is the number of "notches" away from the recommended setting of the display.
 *
 * The configured scale is what DPI should be if the resolution is high enough, the maximum scale is the highest DPI
 * scale that the current screen resolution supports. The actual scale (what the user is looking at) is the configured
 * scale, capped at the maximum.
 *
 * @param {Object} adapter [optional] The adapter id pair (from getAdapter()).
 * @return {DpiConfig} The newly configured, actual, and minimum/maximum DPI offsets
 */
osstubs.display.getScreenDpi = function (adapter) {
    return {
        configured: 0,
        minimum: 0,
        maximum: 0,
        actual: 0
    };
};

// /**
//  * DPI Configuration.
//  * @typedef {Object} DpiConfig
//  * @property {Number} configured The desired DPI setting.
//  * @property {Number} minimum The minimum available DPI setting.
//  * @property {Number} maximum The maximum available DPI setting.
//  * @property {Number} actual The actual DPI setting - the same as configured, but clamped to minimum and maximum.
//  */

fluid.defaults("gpii.osstubs.display.getScreenDpi", {
    gradeNames: "fluid.function",
    argumentMap: {}
});